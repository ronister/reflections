When would you want to use a remote repository rather than keeping all your work
local?

    1. when collaborating with other people on a project. (read/write)
    2. when I want to share my code with someone (read only)
    3. when I want to be able to edit code from multiple different computers
    4. as a backup of my work.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    pulling changes manually, the code doesn't change without me expecting it.
    And if I know the new version of some code is broken, I might not want to pull that change until I the bug is fixed.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks, clones, and branches are all ways to add new changes without
    affecting the existing version.  

    Branches: 
         new changes are added in the SAME repository. 
    Forks / clones: 
         copy an entire repository to a new location. 
         The difference between forking and cloning:
         You can only fork a GitHub repository to another location on GitHub. (forking is a special construct made by GitHub.)
         you can clone any Git repository to anywhere you have access to.

    - I use branching for most cases where I want to add new changes to a repository while keeping an easy reference to a previous version, especially when collaborating with other people. 
    - I clone a repository on GitHub when I want to work on that repository locally rather than using the GitHub website.
    - I fork a repository on GitHub when I want to make changes to that repository public, but I don't have permission to modify the original.


What is the benefit of having a copy of the last known state of the remote
stored locally?

    Fill in your answer here

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
